{
  "stats": {
    "suites": 21,
    "tests": 29,
    "passes": 29,
    "pending": 0,
    "failures": 0,
    "start": "2022-03-11T11:22:01.165Z",
    "end": "2022-03-11T11:22:02.089Z",
    "duration": 924,
    "testsRegistered": 29,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6e78d875-23d5-4ba7-b4c9-73a999f7383e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "871940a7-a00a-4aef-a843-c10b91f40b9b",
          "title": "Comments API",
          "fullFile": "/home/hazem/Documents/Back-Task/tests/comments.spec.js",
          "file": "/tests/comments.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Comments API\"",
              "fullTitle": "Comments API \"before all\" hook in \"Comments API\"",
              "timedOut": false,
              "duration": 3,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tableTruncate();\ncreateUser();\ncreatePost();\ndone();",
              "err": {},
              "uuid": "02632c6f-8c23-468e-bfc4-2d46577e80ff",
              "parentUUID": "871940a7-a00a-4aef-a843-c10b91f40b9b",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Comments API\"",
              "fullTitle": "Comments API \"before each\" hook in \"Comments API\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createComment();\ndone();",
              "err": {},
              "uuid": "d827dc5c-762b-41f5-bd96-9ac1903d3af0",
              "parentUUID": "871940a7-a00a-4aef-a843-c10b91f40b9b",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Comments API\"",
              "fullTitle": "Comments API \"after each\" hook in \"Comments API\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tableTruncate();\ndone();",
              "err": {},
              "uuid": "b0806f63-0d80-4e82-aa49-f6f927fe8afc",
              "parentUUID": "871940a7-a00a-4aef-a843-c10b91f40b9b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "117b01a5-d997-4607-a8f3-cba36a69a0bb",
              "title": "GET /api/v1/comments",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/comments.spec.js",
              "file": "/tests/comments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should get all the comments",
                  "fullTitle": "Comments API GET /api/v1/comments It should get all the comments",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/api/v1/comments\")\n  .end((err, response) => {\n    response.body.should.be.a(\"array\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "11a45ee0-545f-4c7b-aa97-2b187b72ab7d",
                  "parentUUID": "117b01a5-d997-4607-a8f3-cba36a69a0bb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if the table is empty it will return empty array",
                  "fullTitle": "Comments API GET /api/v1/comments if the table is empty it will return empty array",
                  "timedOut": false,
                  "duration": 5,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "tableTruncate();\nchai\n  .request(server)\n  .get(\"/api/v1/comments\")\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"array\");\n    response.body.should.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "63c889a3-95cd-42ee-86ea-ee6c0736f238",
                  "parentUUID": "117b01a5-d997-4607-a8f3-cba36a69a0bb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "11a45ee0-545f-4c7b-aa97-2b187b72ab7d",
                "63c889a3-95cd-42ee-86ea-ee6c0736f238"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "9ddbc159-3da1-4bee-8121-860813c3d89b",
              "title": "GET /api/v1/comments/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/comments.spec.js",
              "file": "/tests/comments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should get a comment by ID",
                  "fullTitle": "Comments API GET /api/v1/comments/:id It should get a comment by ID",
                  "timedOut": false,
                  "duration": 6,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nchai\n  .request(server)\n  .get(`/api/v1/comments/${id}`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "f6981574-4c0a-467d-9ca6-85052ab96731",
                  "parentUUID": "9ddbc159-3da1-4bee-8121-860813c3d89b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if the table is empty it will return empty object",
                  "fullTitle": "Comments API GET /api/v1/comments/:id if the table is empty it will return empty object",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 3954;\nchai\n  .request(server)\n  .get(`/api/v1/comments/${id}`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"object\");\n    response.body.should.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "b4e2ef46-970d-4765-9a5e-cd91f67ce3e9",
                  "parentUUID": "9ddbc159-3da1-4bee-8121-860813c3d89b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f6981574-4c0a-467d-9ca6-85052ab96731",
                "b4e2ef46-970d-4765-9a5e-cd91f67ce3e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 10,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "29e30ef7-495a-49fb-9325-4d180eb4d005",
              "title": "POST /api/v1/comments",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/comments.spec.js",
              "file": "/tests/comments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should POST a new comment",
                  "fullTitle": "Comments API POST /api/v1/comments It should POST a new comment",
                  "timedOut": false,
                  "duration": 47,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "createUser();\ncreatePost();\nconst comment = {\n  title: \"Travel\",\n  content: \"Niceeeee\",\n  userId  : 10,\n  postId : 1\n};\nchai\n  .request(server)\n  .post(\"/api/v1/comments\")\n  .send(comment)\n  .end((err, response) => {\n    response.should.have.status(201);\n    response.body.should.be.a(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "231a0f4d-7264-4bea-91c6-42660a84cb6e",
                  "parentUUID": "29e30ef7-495a-49fb-9325-4d180eb4d005",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if have errors in the data return error message with status code 400",
                  "fullTitle": "Comments API POST /api/v1/comments if have errors in the data return error message with status code 400",
                  "timedOut": false,
                  "duration": 12,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  title: \"Travel\",\n  content: \"\",\n  userId: 10,\n  postId: 1,\n};\nchai\n  .request(server)\n  .post(\"/api/v1/comments\")\n  .send(post)\n  .end((err, response) => {\n    response.should.have.status(400);\n    response.text.should.be.equal('\"content\" is not allowed to be empty');\n    done();\n  });",
                  "err": {},
                  "uuid": "b84b1842-947f-4625-9064-63e58b295ac6",
                  "parentUUID": "29e30ef7-495a-49fb-9325-4d180eb4d005",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if have errors in the data in database will return error message",
                  "fullTitle": "Comments API POST /api/v1/comments if have errors in the data in database will return error message",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const comment = {\n  title: \"pooooooo\",\n  content: \"Hello Post\",\n  userId: 999,\n  postId: 1\n};\nchai\n.request(server)\n.post(\"/api/v1/comments\")\n.send(comment)\n.end((err, response) => {\n    response.text.should.be.equal('\"SQLITE_CONSTRAINT: FOREIGN KEY constraint failed\"');\n    response.status.should.be.equal(200)\n    done();\n  });",
                  "err": {},
                  "uuid": "901e277d-37e2-418e-87e9-962dd6a7b7d7",
                  "parentUUID": "29e30ef7-495a-49fb-9325-4d180eb4d005",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "231a0f4d-7264-4bea-91c6-42660a84cb6e",
                "b84b1842-947f-4625-9064-63e58b295ac6",
                "901e277d-37e2-418e-87e9-962dd6a7b7d7"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 82,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "f6a3f1ce-a70c-4b5c-bba6-0e04db475128",
              "title": "PUT /api/v1/comments/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/comments.spec.js",
              "file": "/tests/comments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should update the data",
                  "fullTitle": "Comments API PUT /api/v1/comments/:id it should update the data",
                  "timedOut": false,
                  "duration": 23,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nconst commentNewData = {\n  title: \"lololololo\",\n  content: \"Hello Comment\",\n}\nchai\n.request(server)\n.put(`/api/v1/comments/${id}`)\n.send(commentNewData)\n.end((err,response)=>{\n  response.body.should.have.property('id').eql(id);\n  response.body.should.have.property('title').eql(commentNewData.title);\n  response.body.should.have.property('content').eql(commentNewData.content);\n  response.status.should.be.equal(200)\n  done();\n})",
                  "err": {},
                  "uuid": "355c5e71-0050-4f11-aab1-22318184c598",
                  "parentUUID": "f6a3f1ce-a70c-4b5c-bba6-0e04db475128",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "355c5e71-0050-4f11-aab1-22318184c598"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "6e6e187f-1be9-44ff-8ed2-f011f3641f31",
              "title": "Delete /api/v1/comments/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/comments.spec.js",
              "file": "/tests/comments.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should delete the comment",
                  "fullTitle": "Comments API Delete /api/v1/comments/:id it should delete the comment",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nchai\n.request(server)\n.delete(`/api/v1/comments/${id}`)\n.end((err,response)=>{\n  response.status.should.be.equal(204)\n  done();\n})",
                  "err": {},
                  "uuid": "cc564714-b5bd-46d8-852f-618df60edf1f",
                  "parentUUID": "6e6e187f-1be9-44ff-8ed2-f011f3641f31",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc564714-b5bd-46d8-852f-618df60edf1f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 19,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "68ae7781-26d8-4ce7-b00b-9bade21902a9",
          "title": "app file",
          "fullFile": "/home/hazem/Documents/Back-Task/tests/index.spec.js",
          "file": "/tests/index.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET /",
              "fullTitle": "app file GET /",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "chai\n    .request(server)\n    .get('/')\n    .end((err,response)=>{\n        response.text.should.be.equal(\"Welocme To Node API!\");\n        done();\n    })",
              "err": {},
              "uuid": "b74cb41d-9433-4106-99da-6fdc578b4c3f",
              "parentUUID": "68ae7781-26d8-4ce7-b00b-9bade21902a9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b74cb41d-9433-4106-99da-6fdc578b4c3f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "dbe82b3e-cbce-40e5-b0aa-efddf2226c77",
          "title": "Posts API",
          "fullFile": "/home/hazem/Documents/Back-Task/tests/posts.spec.js",
          "file": "/tests/posts.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Posts API\"",
              "fullTitle": "Posts API \"before all\" hook in \"Posts API\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tableTruncate();\ncreateUser();\ndone();",
              "err": {},
              "uuid": "0ddf7b3f-8d86-48db-8385-a8102591c2f4",
              "parentUUID": "dbe82b3e-cbce-40e5-b0aa-efddf2226c77",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Posts API\"",
              "fullTitle": "Posts API \"before each\" hook in \"Posts API\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createPost();\ndone();",
              "err": {},
              "uuid": "1d818f66-1886-491a-af1e-981e6efbae66",
              "parentUUID": "dbe82b3e-cbce-40e5-b0aa-efddf2226c77",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Posts API\"",
              "fullTitle": "Posts API \"after each\" hook in \"Posts API\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tableTruncate();\ndone();",
              "err": {},
              "uuid": "27150143-2145-4066-ae95-c0fbb4155f0d",
              "parentUUID": "dbe82b3e-cbce-40e5-b0aa-efddf2226c77",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "3a87df37-fc23-4585-9964-eac97e60e1a2",
              "title": "GET /api/v1/posts",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/posts.spec.js",
              "file": "/tests/posts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should get all the posts",
                  "fullTitle": "Posts API GET /api/v1/posts It should get all the posts",
                  "timedOut": false,
                  "duration": 31,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/api/v1/posts\")\n  .end((err, response) => {\n    response.body.should.be.a(\"array\");\n    response.should.have.status(200);\n    done();\n  });",
                  "err": {},
                  "uuid": "7b5aaf94-bcf0-4b22-9a4d-971f22fde6b5",
                  "parentUUID": "3a87df37-fc23-4585-9964-eac97e60e1a2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if the table is empty it will return empty array",
                  "fullTitle": "Posts API GET /api/v1/posts if the table is empty it will return empty array",
                  "timedOut": false,
                  "duration": 20,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "tableTruncate();\nchai\n  .request(server)\n  .get(\"/api/v1/posts\")\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"array\");\n    response.body.should.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "5327ad0b-4fcf-4204-b5ed-19a6e36214e3",
                  "parentUUID": "3a87df37-fc23-4585-9964-eac97e60e1a2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b5aaf94-bcf0-4b22-9a4d-971f22fde6b5",
                "5327ad0b-4fcf-4204-b5ed-19a6e36214e3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 51,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "45fae9d1-39e9-41ce-b4be-fbc67a9f5e5c",
              "title": "GET /api/v1/posts/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/posts.spec.js",
              "file": "/tests/posts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should get a post by ID",
                  "fullTitle": "Posts API GET /api/v1/posts/:id It should get a post by ID",
                  "timedOut": false,
                  "duration": 10,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nchai\n  .request(server)\n  .get(`/api/v1/posts/${id}`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "27c956b3-b2aa-4625-90b0-a0afe1a4254a",
                  "parentUUID": "45fae9d1-39e9-41ce-b4be-fbc67a9f5e5c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if the table is empty it will return empty object",
                  "fullTitle": "Posts API GET /api/v1/posts/:id if the table is empty it will return empty object",
                  "timedOut": false,
                  "duration": 13,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const postId = 3954;\nchai\n  .request(server)\n  .get(`/api/v1/posts/${postId}`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"object\");\n    response.body.should.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "159b0c7c-fc1a-4b53-b374-8548a898a210",
                  "parentUUID": "45fae9d1-39e9-41ce-b4be-fbc67a9f5e5c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27c956b3-b2aa-4625-90b0-a0afe1a4254a",
                "159b0c7c-fc1a-4b53-b374-8548a898a210"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 23,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "8602699c-3a37-4b1b-be8b-c8aa2c84a7db",
              "title": "POST /api/v1/posts",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/posts.spec.js",
              "file": "/tests/posts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should POST a new post",
                  "fullTitle": "Posts API POST /api/v1/posts It should POST a new post",
                  "timedOut": false,
                  "duration": 18,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  title: \"parkpark\",\n  content: \"greatgreats\",\n  userId: 10,\n};\nchai\n  .request(server)\n  .post(\"/api/v1/posts\")\n  .send(post)\n  .end((err, response) => {\n    response.should.have.status(201);\n    response.body.should.be.a(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "a766baff-8fd4-4b3d-bf36-d63b84e5a6aa",
                  "parentUUID": "8602699c-3a37-4b1b-be8b-c8aa2c84a7db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if have errors in the data return error message with status code 400",
                  "fullTitle": "Posts API POST /api/v1/posts if have errors in the data return error message with status code 400",
                  "timedOut": false,
                  "duration": 3,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  title: \"po\",\n  content: \"Hello Post\",\n};\nchai\n.request(server)\n.post(\"/api/v1/posts\")\n.send(post)\n.end((err, response) => {\n    response.text.should.be.equal('\"title\" length must be at least 3 characters long');\n    response.status.should.be.equal(400)\n    done();\n  });",
                  "err": {},
                  "uuid": "d934f4ff-36bf-4dcd-b4b1-d6d09cde4e34",
                  "parentUUID": "8602699c-3a37-4b1b-be8b-c8aa2c84a7db",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if have errors in the data in database will return error message",
                  "fullTitle": "Posts API POST /api/v1/posts if have errors in the data in database will return error message",
                  "timedOut": false,
                  "duration": 19,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const post = {\n  title: \"pooooooo\",\n  content: \"Hello Post\",\n  userId: 999\n};\nchai\n.request(server)\n.post(\"/api/v1/posts\")\n.send(post)\n.end((err, response) => {\n    response.text.should.be.equal('\"SQLITE_CONSTRAINT: FOREIGN KEY constraint failed\"');\n    response.status.should.be.equal(200)\n    done();\n  });",
                  "err": {},
                  "uuid": "9fa4f826-67d9-4527-96c0-c1c76cfde2c1",
                  "parentUUID": "8602699c-3a37-4b1b-be8b-c8aa2c84a7db",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a766baff-8fd4-4b3d-bf36-d63b84e5a6aa",
                "d934f4ff-36bf-4dcd-b4b1-d6d09cde4e34",
                "9fa4f826-67d9-4527-96c0-c1c76cfde2c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 40,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "86dd0a45-fa49-4896-8cba-02322c670779",
              "title": "PUT /api/v1/posts/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/posts.spec.js",
              "file": "/tests/posts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should update the data",
                  "fullTitle": "Posts API PUT /api/v1/posts/:id it should update the data",
                  "timedOut": false,
                  "duration": 29,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nconst postNewData = {\n  title: \"popopopopopo\",\n  content: \"Hello Post\",\n}\nchai\n.request(server)\n.put(`/api/v1/posts/${id}`)\n.send(postNewData)\n.end((err,response)=>{\n  response.body.should.have.property('id').eql(id);\n  response.body.should.have.property('title').eql(postNewData.title);\n  response.body.should.have.property('content').eql(postNewData.content);\n  response.status.should.be.equal(200)\n  done();\n})",
                  "err": {},
                  "uuid": "13e877f3-408d-49c1-a8c3-ae32d2d0c180",
                  "parentUUID": "86dd0a45-fa49-4896-8cba-02322c670779",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "13e877f3-408d-49c1-a8c3-ae32d2d0c180"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 29,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "34532345-c3be-4668-ae2f-8d4874926d2c",
              "title": "Delete /api/v1/posts/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/posts.spec.js",
              "file": "/tests/posts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should delete the post",
                  "fullTitle": "Posts API Delete /api/v1/posts/:id it should delete the post",
                  "timedOut": false,
                  "duration": 66,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nchai\n.request(server)\n.delete(`/api/v1/posts/${id}`)\n.end((err,response)=>{\n  response.status.should.be.equal(204)\n  done();\n})",
                  "err": {},
                  "uuid": "ea92fa89-cb7c-4060-a0ad-ae64da1e927d",
                  "parentUUID": "34532345-c3be-4668-ae2f-8d4874926d2c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ea92fa89-cb7c-4060-a0ad-ae64da1e927d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 66,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "245ce5d5-e8e8-4691-b3cb-bb002bd5f8c3",
              "title": "GET /api/v1/posts/:id/comments",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/posts.spec.js",
              "file": "/tests/posts.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get all comments for the post",
                  "fullTitle": "Posts API GET /api/v1/posts/:id/comments it should get all comments for the post",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\ncreateComment();\nchai\n.request(server)\n.get(`/api/v1/posts/${id}/comments`)\n.end((err,response)=>{\n  response.status.should.be.equal(200)\n  response.body.should.be.a(\"object\")\n  response.body.should.be.have.property(\"comments\").a(\"array\");\n  done();\n})",
                  "err": {},
                  "uuid": "7d503fce-4a1a-455d-8dcc-7b58ad8a46d3",
                  "parentUUID": "245ce5d5-e8e8-4691-b3cb-bb002bd5f8c3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d503fce-4a1a-455d-8dcc-7b58ad8a46d3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 39,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        },
        {
          "uuid": "805ee6b5-f9a2-497f-95ef-ac3d6c567ace",
          "title": "Users API",
          "fullFile": "/home/hazem/Documents/Back-Task/tests/users.spec.js",
          "file": "/tests/users.spec.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"Users API\"",
              "fullTitle": "Users API \"before all\" hook in \"Users API\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tableTruncate();\ndone();",
              "err": {},
              "uuid": "b747f0c9-0598-4e80-a4c1-040dda423d18",
              "parentUUID": "805ee6b5-f9a2-497f-95ef-ac3d6c567ace",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"before each\" hook in \"Users API\"",
              "fullTitle": "Users API \"before each\" hook in \"Users API\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "createUser();\ndone();",
              "err": {},
              "uuid": "bf68a662-7c0c-4f54-8c20-8f67a839de10",
              "parentUUID": "805ee6b5-f9a2-497f-95ef-ac3d6c567ace",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Users API\"",
              "fullTitle": "Users API \"after each\" hook in \"Users API\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "tableTruncate();\ndone();",
              "err": {},
              "uuid": "0a1153ff-a76c-44fb-b34d-aa0f6ccce358",
              "parentUUID": "805ee6b5-f9a2-497f-95ef-ac3d6c567ace",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "b3a79118-e376-4442-af86-8ed535df9620",
              "title": "GET /api/v1/users",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/users.spec.js",
              "file": "/tests/users.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get all users",
                  "fullTitle": "Users API GET /api/v1/users it should get all users",
                  "timedOut": false,
                  "duration": 44,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/api/v1/users\")\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"array\");\n    done();\n  });",
                  "err": {},
                  "uuid": "cc21e7be-92c3-4a5f-9107-8a0ba5ceb5e2",
                  "parentUUID": "b3a79118-e376-4442-af86-8ed535df9620",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if the table is empty it will return empty array ",
                  "fullTitle": "Users API GET /api/v1/users if the table is empty it will return empty array ",
                  "timedOut": false,
                  "duration": 45,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "tableTruncate();\nchai\n  .request(server)\n  .get(\"/api/v1/users\")\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"array\");\n    response.body.should.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "e952c564-be48-4e72-a89c-496e28c814c2",
                  "parentUUID": "b3a79118-e376-4442-af86-8ed535df9620",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cc21e7be-92c3-4a5f-9107-8a0ba5ceb5e2",
                "e952c564-be48-4e72-a89c-496e28c814c2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 89,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "82d59bc5-dc55-48ad-9d25-09b85db329ab",
              "title": "GET /api/v1/users/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/users.spec.js",
              "file": "/tests/users.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should get a user by ID",
                  "fullTitle": "Users API GET /api/v1/users/:id It should get a user by ID",
                  "timedOut": false,
                  "duration": 30,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "chai\n  .request(server)\n  .get(\"/api/v1/users/1\")\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"object\");\n    done();\n  });",
                  "err": {},
                  "uuid": "1689a24c-673a-4bfa-97a2-53fb87f3c67b",
                  "parentUUID": "82d59bc5-dc55-48ad-9d25-09b85db329ab",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if the table is empty it will return empty object",
                  "fullTitle": "Users API GET /api/v1/users/:id if the table is empty it will return empty object",
                  "timedOut": false,
                  "duration": 46,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "tableTruncate();\nconst id = 3954;\nchai\n  .request(server)\n  .get(`/api/v1/users/${id}`)\n  .end((err, response) => {\n    response.should.have.status(200);\n    response.body.should.be.a(\"object\");\n    response.body.should.be.empty;\n    done();\n  });",
                  "err": {},
                  "uuid": "2ba85bb5-0ce3-4fc2-b1d2-1b796f9c6a05",
                  "parentUUID": "82d59bc5-dc55-48ad-9d25-09b85db329ab",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1689a24c-673a-4bfa-97a2-53fb87f3c67b",
                "2ba85bb5-0ce3-4fc2-b1d2-1b796f9c6a05"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 76,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "934910bd-de74-42e1-a4b3-65994d6ae0d0",
              "title": "POST /api/v1/users",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/users.spec.js",
              "file": "/tests/users.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "It should POST a new user",
                  "fullTitle": "Users API POST /api/v1/users It should POST a new user",
                  "timedOut": false,
                  "duration": 51,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  username: \"Khaled\",\n  email: \"khaled@gmail.com\",\n  password: \"asdasdasd123\",\n};\nchai\n  .request(server)\n  .post(\"/api/v1/users\")\n  .send(user)\n  .end((err, response) => {\n    response.should.have.status(201);\n    response.body.should.be.a(\"object\");\n    response.body.should.to.have.property(\"username\").eql(user.username);\n    response.body.should.to.have.property(\"email\").eql(user.email);\n    response.body.should.to.have.property(\"password\").eql(user.password);\n    done();\n  });",
                  "err": {},
                  "uuid": "161eecd6-0185-4a97-a608-8fc5513039b1",
                  "parentUUID": "934910bd-de74-42e1-a4b3-65994d6ae0d0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "if have errors in the data return error message with status code 400",
                  "fullTitle": "Users API POST /api/v1/users if have errors in the data return error message with status code 400",
                  "timedOut": false,
                  "duration": 9,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const user = {\n  email: \"khaled@gmail.com\",\n  password: \"asdasdasd123\",\n};\nchai\n.request(server)\n.post(\"/api/v1/users\")\n.send(user)\n.end((err, response) => {\n    response.text.should.be.equal('\"username\" is required');\n    response.status.should.be.equal(400)\n    done();\n  });",
                  "err": {},
                  "uuid": "5e209aaf-bb07-49b1-8563-772d0e4578d5",
                  "parentUUID": "934910bd-de74-42e1-a4b3-65994d6ae0d0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "161eecd6-0185-4a97-a608-8fc5513039b1",
                "5e209aaf-bb07-49b1-8563-772d0e4578d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 60,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "6f4545cd-f8c1-4047-8526-8ad950a8dba5",
              "title": "PUT /api/v1/users/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/users.spec.js",
              "file": "/tests/users.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should update the data",
                  "fullTitle": "Users API PUT /api/v1/users/:id it should update the data",
                  "timedOut": false,
                  "duration": 74,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nconst userNewData = {\n  username: \"hazemfsacz\",\n  email: \"hazem@test.com\",\n  password: \"hazemsadsa\",\n}\nchai\n.request(server)\n.put(`/api/v1/users/${id}`)\n.send(userNewData)\n.end((err,response)=>{\n  response.body.should.have.property('id').eql(id);\n  response.body.should.have.property('username').eql(userNewData.username);\n  response.body.should.have.property('email').eql(userNewData.email);\n  response.body.should.have.property('password').eql(userNewData.password);\n  response.status.should.be.equal(200)\n  done();\n})",
                  "err": {},
                  "uuid": "fd6e0d8b-2361-43ef-b70a-c44ec1e279f1",
                  "parentUUID": "6f4545cd-f8c1-4047-8526-8ad950a8dba5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fd6e0d8b-2361-43ef-b70a-c44ec1e279f1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 74,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "10ddad17-3530-4d15-b4e7-cc580c8f036c",
              "title": "Delete /api/v1/users/:id",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/users.spec.js",
              "file": "/tests/users.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should delete the user",
                  "fullTitle": "Users API Delete /api/v1/users/:id it should delete the user",
                  "timedOut": false,
                  "duration": 35,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\nchai\n.request(server)\n.delete(`/api/v1/users/${id}`)\n.end((err,response)=>{\n  response.status.should.be.equal(204)\n  done();\n})",
                  "err": {},
                  "uuid": "ae35d038-af1e-4d98-a79c-6ed2e7e4a942",
                  "parentUUID": "10ddad17-3530-4d15-b4e7-cc580c8f036c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae35d038-af1e-4d98-a79c-6ed2e7e4a942"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 35,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            },
            {
              "uuid": "e0bd30e2-b033-4e20-8f08-4f8399a08aac",
              "title": "GET /api/v1/users/:id/posts",
              "fullFile": "/home/hazem/Documents/Back-Task/tests/users.spec.js",
              "file": "/tests/users.spec.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "it should get all posts for the user",
                  "fullTitle": "Users API GET /api/v1/users/:id/posts it should get all posts for the user",
                  "timedOut": false,
                  "duration": 39,
                  "state": "passed",
                  "speed": "medium",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const id = 1;\ncreateUser();\ncreatePost();\nchai\n.request(server)\n.get(`/api/v1/users/${id}/posts`)\n.end((err,response)=>{\n  response.status.should.be.equal(200)\n  response.body.should.be.a(\"object\")\n  response.body.should.be.have.property(\"posts\").a(\"array\");\n  done();\n})",
                  "err": {},
                  "uuid": "16e34ede-e404-4e39-8671-8e21db9cb40f",
                  "parentUUID": "e0bd30e2-b033-4e20-8f08-4f8399a08aac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "16e34ede-e404-4e39-8671-8e21db9cb40f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 39,
              "root": false,
              "rootEmpty": false,
              "_timeout": 50000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 50000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 50000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "index",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.2"
    },
    "marge": {
      "options": {
        "reportFilename": "index"
      },
      "version": "6.1.1"
    }
  }
}